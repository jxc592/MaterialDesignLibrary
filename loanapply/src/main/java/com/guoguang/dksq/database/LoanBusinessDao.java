package com.guoguang.dksq.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table LOAN_BUSINESS.
*/
public class LoanBusinessDao extends AbstractDao<LoanBusiness, Long> {

    public static final String TABLENAME = "LOAN_BUSINESS";

    /**
     * Properties of entity LoanBusiness.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property SeqNo = new Property(1, String.class, "SeqNo", false, "SEQ_NO");
        public final static Property ApplyType = new Property(2, String.class, "ApplyType", false, "APPLY_TYPE");
        public final static Property LineNo = new Property(3, String.class, "LineNo", false, "LINE_NO");
        public final static Property SerialNo = new Property(4, String.class, "SerialNo", false, "SERIAL_NO");
        public final static Property RelativeSerialNo = new Property(5, String.class, "RelativeSerialNo", false, "RELATIVE_SERIAL_NO");
        public final static Property CustomerID = new Property(6, String.class, "CustomerID", false, "CUSTOMER_ID");
        public final static Property CustomerName = new Property(7, String.class, "CustomerName", false, "CUSTOMER_NAME");
        public final static Property OccurDate = new Property(8, String.class, "OccurDate", false, "OCCUR_DATE");
        public final static Property BusinessType = new Property(9, String.class, "BusinessType", false, "BUSINESS_TYPE");
        public final static Property OccurType = new Property(10, String.class, "OccurType", false, "OCCUR_TYPE");
        public final static Property CreditAggreement = new Property(11, String.class, "CreditAggreement", false, "CREDIT_AGGREEMENT");
        public final static Property ContractFlag = new Property(12, String.class, "ContractFlag", false, "CONTRACT_FLAG");
        public final static Property ThirdParty3 = new Property(13, String.class, "ThirdParty3", false, "THIRD_PARTY3");
        public final static Property CooperatetEntName = new Property(14, String.class, "CooperatetEntName", false, "COOPERATET_ENT_NAME");
        public final static Property DESCRIBE1 = new Property(15, String.class, "DESCRIBE1", false, "DESCRIBE1");
        public final static Property OperationMode = new Property(16, String.class, "OperationMode", false, "OPERATION_MODE");
        public final static Property BusinessCurrency = new Property(17, String.class, "BusinessCurrency", false, "BUSINESS_CURRENCY");
        public final static Property BusinessSum = new Property(18, String.class, "BusinessSum", false, "BUSINESS_SUM");
        public final static Property TermMonth = new Property(19, String.class, "TermMonth", false, "TERM_MONTH");
        public final static Property TermDay = new Property(20, String.class, "TermDay", false, "TERM_DAY");
        public final static Property RateMode = new Property(21, String.class, "RateMode", false, "RATE_MODE");
        public final static Property BaseRateType = new Property(22, String.class, "BaseRateType", false, "BASE_RATE_TYPE");
        public final static Property BaseRate = new Property(23, String.class, "BaseRate", false, "BASE_RATE");
        public final static Property RateFloatType = new Property(24, String.class, "RateFloatType", false, "RATE_FLOAT_TYPE");
        public final static Property RateFloat = new Property(25, String.class, "RateFloat", false, "RATE_FLOAT");
        public final static Property BusinessRate = new Property(26, String.class, "BusinessRate", false, "BUSINESS_RATE");
        public final static Property AdjustRateType = new Property(27, String.class, "AdjustRateType", false, "ADJUST_RATE_TYPE");
        public final static Property DESIGNATEDATE = new Property(28, String.class, "DESIGNATEDATE", false, "DESIGNATEDATE");
        public final static Property CYCLEMONTHS = new Property(29, String.class, "CYCLEMONTHS", false, "CYCLEMONTHS");
        public final static Property MAINREPAYMENTMETHOD = new Property(30, String.class, "MAINREPAYMENTMETHOD", false, "MAINREPAYMENTMETHOD");
        public final static Property REPAYMENTMETHOD = new Property(31, String.class, "REPAYMENTMETHOD", false, "REPAYMENTMETHOD");
        public final static Property PayCyc = new Property(32, String.class, "PayCyc", false, "PAY_CYC");
        public final static Property GainCyc = new Property(33, String.class, "GainCyc", false, "GAIN_CYC");
        public final static Property GainAmount = new Property(34, String.class, "GainAmount", false, "GAIN_AMOUNT");
        public final static Property HoldCorpus = new Property(35, String.class, "HoldCorpus", false, "HOLD_CORPUS");
        public final static Property AMORTIZETERM = new Property(36, String.class, "AMORTIZETERM", false, "AMORTIZETERM");
        public final static Property GRACEPERIODDATE = new Property(37, String.class, "GRACEPERIODDATE", false, "GRACEPERIODDATE");
        public final static Property PayAccountName = new Property(38, String.class, "PayAccountName", false, "PAY_ACCOUNT_NAME");
        public final static Property PayAccountNo = new Property(39, String.class, "PayAccountNo", false, "PAY_ACCOUNT_NO");
        public final static Property DefaultPayAcctNoType = new Property(40, String.class, "DefaultPayAcctNoType", false, "DEFAULT_PAY_ACCT_NO_TYPE");
        public final static Property IncomeOrgID = new Property(41, String.class, "IncomeOrgID", false, "INCOME_ORG_ID");
        public final static Property IncomeOrgName = new Property(42, String.class, "IncomeOrgName", false, "INCOME_ORG_NAME");
        public final static Property PaymentMode = new Property(43, String.class, "PaymentMode", false, "PAYMENT_MODE");
        public final static Property HouseNum = new Property(44, String.class, "HouseNum", false, "HOUSE_NUM");
        public final static Property CurrentHouseCount = new Property(45, String.class, "CurrentHouseCount", false, "CURRENT_HOUSE_COUNT");
        public final static Property MfeeSum = new Property(46, String.class, "MfeeSum", false, "MFEE_SUM");
        public final static Property PutOutType = new Property(47, String.class, "PutOutType", false, "PUT_OUT_TYPE");
        public final static Property ThirdParty1 = new Property(48, String.class, "ThirdParty1", false, "THIRD_PARTY1");
        public final static Property ThirdPartyID1 = new Property(49, String.class, "ThirdPartyID1", false, "THIRD_PARTY_ID1");
        public final static Property ThirdParty2 = new Property(50, String.class, "ThirdParty2", false, "THIRD_PARTY2");
        public final static Property ConstructionArea = new Property(51, String.class, "ConstructionArea", false, "CONSTRUCTION_AREA");
        public final static Property ThirdPartyID2 = new Property(52, String.class, "ThirdPartyID2", false, "THIRD_PARTY_ID2");
        public final static Property ThirdPartyAdd1 = new Property(53, String.class, "ThirdPartyAdd1", false, "THIRD_PARTY_ADD1");
        public final static Property ThirdPartyZIP1 = new Property(54, String.class, "ThirdPartyZIP1", false, "THIRD_PARTY_ZIP1");
        public final static Property ThirdPartyAdd2 = new Property(55, String.class, "ThirdPartyAdd2", false, "THIRD_PARTY_ADD2");
        public final static Property ThirdPartyZIP2 = new Property(56, String.class, "ThirdPartyZIP2", false, "THIRD_PARTY_ZIP2");
        public final static Property ThirdPartyAdd3 = new Property(57, String.class, "ThirdPartyAdd3", false, "THIRD_PARTY_ADD3");
        public final static Property ThirdPartyZIP3 = new Property(58, String.class, "ThirdPartyZIP3", false, "THIRD_PARTY_ZIP3");
        public final static Property ISSMALLFlow = new Property(59, String.class, "ISSMALLFlow", false, "ISSMALLFLOW");
        public final static Property VouchType = new Property(60, String.class, "VouchType", false, "VOUCH_TYPE");
        public final static Property VouchTypeName = new Property(61, String.class, "VouchTypeName", false, "VOUCH_TYPE_NAME");
        public final static Property Flag1 = new Property(62, String.class, "Flag1", false, "FLAG1");
        public final static Property FARMINGTYPE = new Property(63, String.class, "FARMINGTYPE", false, "FARMINGTYPE");
        public final static Property IsLowRisk = new Property(64, String.class, "IsLowRisk", false, "IS_LOW_RISK");
        public final static Property Purpose = new Property(65, String.class, "Purpose", false, "PURPOSE");
        public final static Property Attribute01 = new Property(66, String.class, "Attribute01", false, "ATTRIBUTE01");
        public final static Property Attribute02 = new Property(67, String.class, "Attribute02", false, "ATTRIBUTE02");
        public final static Property Attribute03 = new Property(68, String.class, "Attribute03", false, "ATTRIBUTE03");
        public final static Property Attribute04 = new Property(69, String.class, "Attribute04", false, "ATTRIBUTE04");
        public final static Property Attribute05 = new Property(70, String.class, "Attribute05", false, "ATTRIBUTE05");
        public final static Property Attribute06 = new Property(71, String.class, "Attribute06", false, "ATTRIBUTE06");
        public final static Property Attribute07 = new Property(72, String.class, "Attribute07", false, "ATTRIBUTE07");
        public final static Property Attribute08 = new Property(73, String.class, "Attribute08", false, "ATTRIBUTE08");
        public final static Property Attribute09 = new Property(74, String.class, "Attribute09", false, "ATTRIBUTE09");
        public final static Property BusinessSource = new Property(75, String.class, "BusinessSource", false, "BUSINESS_SOURCE");
        public final static Property BusinessSourceName = new Property(76, String.class, "BusinessSourceName", false, "BUSINESS_SOURCE_NAME");
        public final static Property OtherCondition = new Property(77, String.class, "OtherCondition", false, "OTHER_CONDITION");
        public final static Property Remark = new Property(78, String.class, "Remark", false, "REMARK");
        public final static Property GuarantyFlag = new Property(79, String.class, "GuarantyFlag", false, "GUARANTY_FLAG");
        public final static Property LNGOTimes = new Property(80, String.class, "LNGOTimes", false, "LNGOTIMES");
        public final static Property GOLNTimes = new Property(81, String.class, "GOLNTimes", false, "GOLNTIMES");
        public final static Property DRTimes = new Property(82, String.class, "DRTimes", false, "DRTIMES");
        public final static Property OperateUserID = new Property(83, String.class, "OperateUserID", false, "OPERATE_USER_ID");
        public final static Property OperateOrgID = new Property(84, String.class, "OperateOrgID", false, "OPERATE_ORG_ID");
        public final static Property OperateOrgName = new Property(85, String.class, "OperateOrgName", false, "OPERATE_ORG_NAME");
        public final static Property OperateUserName = new Property(86, String.class, "OperateUserName", false, "OPERATE_USER_NAME");
        public final static Property OperateUserID1 = new Property(87, String.class, "OperateUserID1", false, "OPERATE_USER_ID1");
        public final static Property OperateUserName1 = new Property(88, String.class, "OperateUserName1", false, "OPERATE_USER_NAME1");
        public final static Property InputUserID = new Property(89, String.class, "InputUserID", false, "INPUT_USER_ID");
        public final static Property InputUserName = new Property(90, String.class, "InputUserName", false, "INPUT_USER_NAME");
        public final static Property InputOrgID = new Property(91, String.class, "InputOrgID", false, "INPUT_ORG_ID");
        public final static Property InputOrgName = new Property(92, String.class, "InputOrgName", false, "INPUT_ORG_NAME");
        public final static Property InputDate = new Property(93, String.class, "InputDate", false, "INPUT_DATE");
        public final static Property UpdateDate = new Property(94, String.class, "UpdateDate", false, "UPDATE_DATE");
        public final static Property PigeonholeDate = new Property(95, String.class, "PigeonholeDate", false, "PIGEONHOLE_DATE");
        public final static Property TempSaveFlag = new Property(96, String.class, "TempSaveFlag", false, "TEMP_SAVE_FLAG");
        public final static Property PhaseOpinion = new Property(97, String.class, "PhaseOpinion", false, "PHASE_OPINION");
    };


    public LoanBusinessDao(DaoConfig config) {
        super(config);
    }
    
    public LoanBusinessDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'LOAN_BUSINESS' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'SEQ_NO' TEXT," + // 1: SeqNo
                "'APPLY_TYPE' TEXT," + // 2: ApplyType
                "'LINE_NO' TEXT," + // 3: LineNo
                "'SERIAL_NO' TEXT," + // 4: SerialNo
                "'RELATIVE_SERIAL_NO' TEXT," + // 5: RelativeSerialNo
                "'CUSTOMER_ID' TEXT," + // 6: CustomerID
                "'CUSTOMER_NAME' TEXT," + // 7: CustomerName
                "'OCCUR_DATE' TEXT," + // 8: OccurDate
                "'BUSINESS_TYPE' TEXT," + // 9: BusinessType
                "'OCCUR_TYPE' TEXT," + // 10: OccurType
                "'CREDIT_AGGREEMENT' TEXT," + // 11: CreditAggreement
                "'CONTRACT_FLAG' TEXT," + // 12: ContractFlag
                "'THIRD_PARTY3' TEXT," + // 13: ThirdParty3
                "'COOPERATET_ENT_NAME' TEXT," + // 14: CooperatetEntName
                "'DESCRIBE1' TEXT," + // 15: DESCRIBE1
                "'OPERATION_MODE' TEXT," + // 16: OperationMode
                "'BUSINESS_CURRENCY' TEXT," + // 17: BusinessCurrency
                "'BUSINESS_SUM' TEXT," + // 18: BusinessSum
                "'TERM_MONTH' TEXT," + // 19: TermMonth
                "'TERM_DAY' TEXT," + // 20: TermDay
                "'RATE_MODE' TEXT," + // 21: RateMode
                "'BASE_RATE_TYPE' TEXT," + // 22: BaseRateType
                "'BASE_RATE' TEXT," + // 23: BaseRate
                "'RATE_FLOAT_TYPE' TEXT," + // 24: RateFloatType
                "'RATE_FLOAT' TEXT," + // 25: RateFloat
                "'BUSINESS_RATE' TEXT," + // 26: BusinessRate
                "'ADJUST_RATE_TYPE' TEXT," + // 27: AdjustRateType
                "'DESIGNATEDATE' TEXT," + // 28: DESIGNATEDATE
                "'CYCLEMONTHS' TEXT," + // 29: CYCLEMONTHS
                "'MAINREPAYMENTMETHOD' TEXT," + // 30: MAINREPAYMENTMETHOD
                "'REPAYMENTMETHOD' TEXT," + // 31: REPAYMENTMETHOD
                "'PAY_CYC' TEXT," + // 32: PayCyc
                "'GAIN_CYC' TEXT," + // 33: GainCyc
                "'GAIN_AMOUNT' TEXT," + // 34: GainAmount
                "'HOLD_CORPUS' TEXT," + // 35: HoldCorpus
                "'AMORTIZETERM' TEXT," + // 36: AMORTIZETERM
                "'GRACEPERIODDATE' TEXT," + // 37: GRACEPERIODDATE
                "'PAY_ACCOUNT_NAME' TEXT," + // 38: PayAccountName
                "'PAY_ACCOUNT_NO' TEXT," + // 39: PayAccountNo
                "'DEFAULT_PAY_ACCT_NO_TYPE' TEXT," + // 40: DefaultPayAcctNoType
                "'INCOME_ORG_ID' TEXT," + // 41: IncomeOrgID
                "'INCOME_ORG_NAME' TEXT," + // 42: IncomeOrgName
                "'PAYMENT_MODE' TEXT," + // 43: PaymentMode
                "'HOUSE_NUM' TEXT," + // 44: HouseNum
                "'CURRENT_HOUSE_COUNT' TEXT," + // 45: CurrentHouseCount
                "'MFEE_SUM' TEXT," + // 46: MfeeSum
                "'PUT_OUT_TYPE' TEXT," + // 47: PutOutType
                "'THIRD_PARTY1' TEXT," + // 48: ThirdParty1
                "'THIRD_PARTY_ID1' TEXT," + // 49: ThirdPartyID1
                "'THIRD_PARTY2' TEXT," + // 50: ThirdParty2
                "'CONSTRUCTION_AREA' TEXT," + // 51: ConstructionArea
                "'THIRD_PARTY_ID2' TEXT," + // 52: ThirdPartyID2
                "'THIRD_PARTY_ADD1' TEXT," + // 53: ThirdPartyAdd1
                "'THIRD_PARTY_ZIP1' TEXT," + // 54: ThirdPartyZIP1
                "'THIRD_PARTY_ADD2' TEXT," + // 55: ThirdPartyAdd2
                "'THIRD_PARTY_ZIP2' TEXT," + // 56: ThirdPartyZIP2
                "'THIRD_PARTY_ADD3' TEXT," + // 57: ThirdPartyAdd3
                "'THIRD_PARTY_ZIP3' TEXT," + // 58: ThirdPartyZIP3
                "'ISSMALLFLOW' TEXT," + // 59: ISSMALLFlow
                "'VOUCH_TYPE' TEXT," + // 60: VouchType
                "'VOUCH_TYPE_NAME' TEXT," + // 61: VouchTypeName
                "'FLAG1' TEXT," + // 62: Flag1
                "'FARMINGTYPE' TEXT," + // 63: FARMINGTYPE
                "'IS_LOW_RISK' TEXT," + // 64: IsLowRisk
                "'PURPOSE' TEXT," + // 65: Purpose
                "'ATTRIBUTE01' TEXT," + // 66: Attribute01
                "'ATTRIBUTE02' TEXT," + // 67: Attribute02
                "'ATTRIBUTE03' TEXT," + // 68: Attribute03
                "'ATTRIBUTE04' TEXT," + // 69: Attribute04
                "'ATTRIBUTE05' TEXT," + // 70: Attribute05
                "'ATTRIBUTE06' TEXT," + // 71: Attribute06
                "'ATTRIBUTE07' TEXT," + // 72: Attribute07
                "'ATTRIBUTE08' TEXT," + // 73: Attribute08
                "'ATTRIBUTE09' TEXT," + // 74: Attribute09
                "'BUSINESS_SOURCE' TEXT," + // 75: BusinessSource
                "'BUSINESS_SOURCE_NAME' TEXT," + // 76: BusinessSourceName
                "'OTHER_CONDITION' TEXT," + // 77: OtherCondition
                "'REMARK' TEXT," + // 78: Remark
                "'GUARANTY_FLAG' TEXT," + // 79: GuarantyFlag
                "'LNGOTIMES' TEXT," + // 80: LNGOTimes
                "'GOLNTIMES' TEXT," + // 81: GOLNTimes
                "'DRTIMES' TEXT," + // 82: DRTimes
                "'OPERATE_USER_ID' TEXT," + // 83: OperateUserID
                "'OPERATE_ORG_ID' TEXT," + // 84: OperateOrgID
                "'OPERATE_ORG_NAME' TEXT," + // 85: OperateOrgName
                "'OPERATE_USER_NAME' TEXT," + // 86: OperateUserName
                "'OPERATE_USER_ID1' TEXT," + // 87: OperateUserID1
                "'OPERATE_USER_NAME1' TEXT," + // 88: OperateUserName1
                "'INPUT_USER_ID' TEXT," + // 89: InputUserID
                "'INPUT_USER_NAME' TEXT," + // 90: InputUserName
                "'INPUT_ORG_ID' TEXT," + // 91: InputOrgID
                "'INPUT_ORG_NAME' TEXT," + // 92: InputOrgName
                "'INPUT_DATE' TEXT," + // 93: InputDate
                "'UPDATE_DATE' TEXT," + // 94: UpdateDate
                "'PIGEONHOLE_DATE' TEXT," + // 95: PigeonholeDate
                "'TEMP_SAVE_FLAG' TEXT," + // 96: TempSaveFlag
                "'PHASE_OPINION' TEXT);"); // 97: PhaseOpinion
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'LOAN_BUSINESS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LoanBusiness entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String SeqNo = entity.getSeqNo();
        if (SeqNo != null) {
            stmt.bindString(2, SeqNo);
        }
 
        String ApplyType = entity.getApplyType();
        if (ApplyType != null) {
            stmt.bindString(3, ApplyType);
        }
 
        String LineNo = entity.getLineNo();
        if (LineNo != null) {
            stmt.bindString(4, LineNo);
        }
 
        String SerialNo = entity.getSerialNo();
        if (SerialNo != null) {
            stmt.bindString(5, SerialNo);
        }
 
        String RelativeSerialNo = entity.getRelativeSerialNo();
        if (RelativeSerialNo != null) {
            stmt.bindString(6, RelativeSerialNo);
        }
 
        String CustomerID = entity.getCustomerID();
        if (CustomerID != null) {
            stmt.bindString(7, CustomerID);
        }
 
        String CustomerName = entity.getCustomerName();
        if (CustomerName != null) {
            stmt.bindString(8, CustomerName);
        }
 
        String OccurDate = entity.getOccurDate();
        if (OccurDate != null) {
            stmt.bindString(9, OccurDate);
        }
 
        String BusinessType = entity.getBusinessType();
        if (BusinessType != null) {
            stmt.bindString(10, BusinessType);
        }
 
        String OccurType = entity.getOccurType();
        if (OccurType != null) {
            stmt.bindString(11, OccurType);
        }
 
        String CreditAggreement = entity.getCreditAggreement();
        if (CreditAggreement != null) {
            stmt.bindString(12, CreditAggreement);
        }
 
        String ContractFlag = entity.getContractFlag();
        if (ContractFlag != null) {
            stmt.bindString(13, ContractFlag);
        }
 
        String ThirdParty3 = entity.getThirdParty3();
        if (ThirdParty3 != null) {
            stmt.bindString(14, ThirdParty3);
        }
 
        String CooperatetEntName = entity.getCooperatetEntName();
        if (CooperatetEntName != null) {
            stmt.bindString(15, CooperatetEntName);
        }
 
        String DESCRIBE1 = entity.getDESCRIBE1();
        if (DESCRIBE1 != null) {
            stmt.bindString(16, DESCRIBE1);
        }
 
        String OperationMode = entity.getOperationMode();
        if (OperationMode != null) {
            stmt.bindString(17, OperationMode);
        }
 
        String BusinessCurrency = entity.getBusinessCurrency();
        if (BusinessCurrency != null) {
            stmt.bindString(18, BusinessCurrency);
        }
 
        String BusinessSum = entity.getBusinessSum();
        if (BusinessSum != null) {
            stmt.bindString(19, BusinessSum);
        }
 
        String TermMonth = entity.getTermMonth();
        if (TermMonth != null) {
            stmt.bindString(20, TermMonth);
        }
 
        String TermDay = entity.getTermDay();
        if (TermDay != null) {
            stmt.bindString(21, TermDay);
        }
 
        String RateMode = entity.getRateMode();
        if (RateMode != null) {
            stmt.bindString(22, RateMode);
        }
 
        String BaseRateType = entity.getBaseRateType();
        if (BaseRateType != null) {
            stmt.bindString(23, BaseRateType);
        }
 
        String BaseRate = entity.getBaseRate();
        if (BaseRate != null) {
            stmt.bindString(24, BaseRate);
        }
 
        String RateFloatType = entity.getRateFloatType();
        if (RateFloatType != null) {
            stmt.bindString(25, RateFloatType);
        }
 
        String RateFloat = entity.getRateFloat();
        if (RateFloat != null) {
            stmt.bindString(26, RateFloat);
        }
 
        String BusinessRate = entity.getBusinessRate();
        if (BusinessRate != null) {
            stmt.bindString(27, BusinessRate);
        }
 
        String AdjustRateType = entity.getAdjustRateType();
        if (AdjustRateType != null) {
            stmt.bindString(28, AdjustRateType);
        }
 
        String DESIGNATEDATE = entity.getDESIGNATEDATE();
        if (DESIGNATEDATE != null) {
            stmt.bindString(29, DESIGNATEDATE);
        }
 
        String CYCLEMONTHS = entity.getCYCLEMONTHS();
        if (CYCLEMONTHS != null) {
            stmt.bindString(30, CYCLEMONTHS);
        }
 
        String MAINREPAYMENTMETHOD = entity.getMAINREPAYMENTMETHOD();
        if (MAINREPAYMENTMETHOD != null) {
            stmt.bindString(31, MAINREPAYMENTMETHOD);
        }
 
        String REPAYMENTMETHOD = entity.getREPAYMENTMETHOD();
        if (REPAYMENTMETHOD != null) {
            stmt.bindString(32, REPAYMENTMETHOD);
        }
 
        String PayCyc = entity.getPayCyc();
        if (PayCyc != null) {
            stmt.bindString(33, PayCyc);
        }
 
        String GainCyc = entity.getGainCyc();
        if (GainCyc != null) {
            stmt.bindString(34, GainCyc);
        }
 
        String GainAmount = entity.getGainAmount();
        if (GainAmount != null) {
            stmt.bindString(35, GainAmount);
        }
 
        String HoldCorpus = entity.getHoldCorpus();
        if (HoldCorpus != null) {
            stmt.bindString(36, HoldCorpus);
        }
 
        String AMORTIZETERM = entity.getAMORTIZETERM();
        if (AMORTIZETERM != null) {
            stmt.bindString(37, AMORTIZETERM);
        }
 
        String GRACEPERIODDATE = entity.getGRACEPERIODDATE();
        if (GRACEPERIODDATE != null) {
            stmt.bindString(38, GRACEPERIODDATE);
        }
 
        String PayAccountName = entity.getPayAccountName();
        if (PayAccountName != null) {
            stmt.bindString(39, PayAccountName);
        }
 
        String PayAccountNo = entity.getPayAccountNo();
        if (PayAccountNo != null) {
            stmt.bindString(40, PayAccountNo);
        }
 
        String DefaultPayAcctNoType = entity.getDefaultPayAcctNoType();
        if (DefaultPayAcctNoType != null) {
            stmt.bindString(41, DefaultPayAcctNoType);
        }
 
        String IncomeOrgID = entity.getIncomeOrgID();
        if (IncomeOrgID != null) {
            stmt.bindString(42, IncomeOrgID);
        }
 
        String IncomeOrgName = entity.getIncomeOrgName();
        if (IncomeOrgName != null) {
            stmt.bindString(43, IncomeOrgName);
        }
 
        String PaymentMode = entity.getPaymentMode();
        if (PaymentMode != null) {
            stmt.bindString(44, PaymentMode);
        }
 
        String HouseNum = entity.getHouseNum();
        if (HouseNum != null) {
            stmt.bindString(45, HouseNum);
        }
 
        String CurrentHouseCount = entity.getCurrentHouseCount();
        if (CurrentHouseCount != null) {
            stmt.bindString(46, CurrentHouseCount);
        }
 
        String MfeeSum = entity.getMfeeSum();
        if (MfeeSum != null) {
            stmt.bindString(47, MfeeSum);
        }
 
        String PutOutType = entity.getPutOutType();
        if (PutOutType != null) {
            stmt.bindString(48, PutOutType);
        }
 
        String ThirdParty1 = entity.getThirdParty1();
        if (ThirdParty1 != null) {
            stmt.bindString(49, ThirdParty1);
        }
 
        String ThirdPartyID1 = entity.getThirdPartyID1();
        if (ThirdPartyID1 != null) {
            stmt.bindString(50, ThirdPartyID1);
        }
 
        String ThirdParty2 = entity.getThirdParty2();
        if (ThirdParty2 != null) {
            stmt.bindString(51, ThirdParty2);
        }
 
        String ConstructionArea = entity.getConstructionArea();
        if (ConstructionArea != null) {
            stmt.bindString(52, ConstructionArea);
        }
 
        String ThirdPartyID2 = entity.getThirdPartyID2();
        if (ThirdPartyID2 != null) {
            stmt.bindString(53, ThirdPartyID2);
        }
 
        String ThirdPartyAdd1 = entity.getThirdPartyAdd1();
        if (ThirdPartyAdd1 != null) {
            stmt.bindString(54, ThirdPartyAdd1);
        }
 
        String ThirdPartyZIP1 = entity.getThirdPartyZIP1();
        if (ThirdPartyZIP1 != null) {
            stmt.bindString(55, ThirdPartyZIP1);
        }
 
        String ThirdPartyAdd2 = entity.getThirdPartyAdd2();
        if (ThirdPartyAdd2 != null) {
            stmt.bindString(56, ThirdPartyAdd2);
        }
 
        String ThirdPartyZIP2 = entity.getThirdPartyZIP2();
        if (ThirdPartyZIP2 != null) {
            stmt.bindString(57, ThirdPartyZIP2);
        }
 
        String ThirdPartyAdd3 = entity.getThirdPartyAdd3();
        if (ThirdPartyAdd3 != null) {
            stmt.bindString(58, ThirdPartyAdd3);
        }
 
        String ThirdPartyZIP3 = entity.getThirdPartyZIP3();
        if (ThirdPartyZIP3 != null) {
            stmt.bindString(59, ThirdPartyZIP3);
        }
 
        String ISSMALLFlow = entity.getISSMALLFlow();
        if (ISSMALLFlow != null) {
            stmt.bindString(60, ISSMALLFlow);
        }
 
        String VouchType = entity.getVouchType();
        if (VouchType != null) {
            stmt.bindString(61, VouchType);
        }
 
        String VouchTypeName = entity.getVouchTypeName();
        if (VouchTypeName != null) {
            stmt.bindString(62, VouchTypeName);
        }
 
        String Flag1 = entity.getFlag1();
        if (Flag1 != null) {
            stmt.bindString(63, Flag1);
        }
 
        String FARMINGTYPE = entity.getFARMINGTYPE();
        if (FARMINGTYPE != null) {
            stmt.bindString(64, FARMINGTYPE);
        }
 
        String IsLowRisk = entity.getIsLowRisk();
        if (IsLowRisk != null) {
            stmt.bindString(65, IsLowRisk);
        }
 
        String Purpose = entity.getPurpose();
        if (Purpose != null) {
            stmt.bindString(66, Purpose);
        }
 
        String Attribute01 = entity.getAttribute01();
        if (Attribute01 != null) {
            stmt.bindString(67, Attribute01);
        }
 
        String Attribute02 = entity.getAttribute02();
        if (Attribute02 != null) {
            stmt.bindString(68, Attribute02);
        }
 
        String Attribute03 = entity.getAttribute03();
        if (Attribute03 != null) {
            stmt.bindString(69, Attribute03);
        }
 
        String Attribute04 = entity.getAttribute04();
        if (Attribute04 != null) {
            stmt.bindString(70, Attribute04);
        }
 
        String Attribute05 = entity.getAttribute05();
        if (Attribute05 != null) {
            stmt.bindString(71, Attribute05);
        }
 
        String Attribute06 = entity.getAttribute06();
        if (Attribute06 != null) {
            stmt.bindString(72, Attribute06);
        }
 
        String Attribute07 = entity.getAttribute07();
        if (Attribute07 != null) {
            stmt.bindString(73, Attribute07);
        }
 
        String Attribute08 = entity.getAttribute08();
        if (Attribute08 != null) {
            stmt.bindString(74, Attribute08);
        }
 
        String Attribute09 = entity.getAttribute09();
        if (Attribute09 != null) {
            stmt.bindString(75, Attribute09);
        }
 
        String BusinessSource = entity.getBusinessSource();
        if (BusinessSource != null) {
            stmt.bindString(76, BusinessSource);
        }
 
        String BusinessSourceName = entity.getBusinessSourceName();
        if (BusinessSourceName != null) {
            stmt.bindString(77, BusinessSourceName);
        }
 
        String OtherCondition = entity.getOtherCondition();
        if (OtherCondition != null) {
            stmt.bindString(78, OtherCondition);
        }
 
        String Remark = entity.getRemark();
        if (Remark != null) {
            stmt.bindString(79, Remark);
        }
 
        String GuarantyFlag = entity.getGuarantyFlag();
        if (GuarantyFlag != null) {
            stmt.bindString(80, GuarantyFlag);
        }
 
        String LNGOTimes = entity.getLNGOTimes();
        if (LNGOTimes != null) {
            stmt.bindString(81, LNGOTimes);
        }
 
        String GOLNTimes = entity.getGOLNTimes();
        if (GOLNTimes != null) {
            stmt.bindString(82, GOLNTimes);
        }
 
        String DRTimes = entity.getDRTimes();
        if (DRTimes != null) {
            stmt.bindString(83, DRTimes);
        }
 
        String OperateUserID = entity.getOperateUserID();
        if (OperateUserID != null) {
            stmt.bindString(84, OperateUserID);
        }
 
        String OperateOrgID = entity.getOperateOrgID();
        if (OperateOrgID != null) {
            stmt.bindString(85, OperateOrgID);
        }
 
        String OperateOrgName = entity.getOperateOrgName();
        if (OperateOrgName != null) {
            stmt.bindString(86, OperateOrgName);
        }
 
        String OperateUserName = entity.getOperateUserName();
        if (OperateUserName != null) {
            stmt.bindString(87, OperateUserName);
        }
 
        String OperateUserID1 = entity.getOperateUserID1();
        if (OperateUserID1 != null) {
            stmt.bindString(88, OperateUserID1);
        }
 
        String OperateUserName1 = entity.getOperateUserName1();
        if (OperateUserName1 != null) {
            stmt.bindString(89, OperateUserName1);
        }
 
        String InputUserID = entity.getInputUserID();
        if (InputUserID != null) {
            stmt.bindString(90, InputUserID);
        }
 
        String InputUserName = entity.getInputUserName();
        if (InputUserName != null) {
            stmt.bindString(91, InputUserName);
        }
 
        String InputOrgID = entity.getInputOrgID();
        if (InputOrgID != null) {
            stmt.bindString(92, InputOrgID);
        }
 
        String InputOrgName = entity.getInputOrgName();
        if (InputOrgName != null) {
            stmt.bindString(93, InputOrgName);
        }
 
        String InputDate = entity.getInputDate();
        if (InputDate != null) {
            stmt.bindString(94, InputDate);
        }
 
        String UpdateDate = entity.getUpdateDate();
        if (UpdateDate != null) {
            stmt.bindString(95, UpdateDate);
        }
 
        String PigeonholeDate = entity.getPigeonholeDate();
        if (PigeonholeDate != null) {
            stmt.bindString(96, PigeonholeDate);
        }
 
        String TempSaveFlag = entity.getTempSaveFlag();
        if (TempSaveFlag != null) {
            stmt.bindString(97, TempSaveFlag);
        }
 
        String PhaseOpinion = entity.getPhaseOpinion();
        if (PhaseOpinion != null) {
            stmt.bindString(98, PhaseOpinion);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LoanBusiness readEntity(Cursor cursor, int offset) {
        LoanBusiness entity = new LoanBusiness( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // SeqNo
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ApplyType
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // LineNo
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // SerialNo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // RelativeSerialNo
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // CustomerID
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // CustomerName
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // OccurDate
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // BusinessType
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // OccurType
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // CreditAggreement
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // ContractFlag
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // ThirdParty3
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // CooperatetEntName
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // DESCRIBE1
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // OperationMode
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // BusinessCurrency
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // BusinessSum
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // TermMonth
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // TermDay
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // RateMode
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // BaseRateType
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // BaseRate
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // RateFloatType
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // RateFloat
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // BusinessRate
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // AdjustRateType
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // DESIGNATEDATE
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // CYCLEMONTHS
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // MAINREPAYMENTMETHOD
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // REPAYMENTMETHOD
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // PayCyc
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // GainCyc
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // GainAmount
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // HoldCorpus
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // AMORTIZETERM
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // GRACEPERIODDATE
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // PayAccountName
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // PayAccountNo
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // DefaultPayAcctNoType
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // IncomeOrgID
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // IncomeOrgName
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // PaymentMode
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // HouseNum
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // CurrentHouseCount
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // MfeeSum
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // PutOutType
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // ThirdParty1
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // ThirdPartyID1
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // ThirdParty2
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // ConstructionArea
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // ThirdPartyID2
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // ThirdPartyAdd1
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // ThirdPartyZIP1
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // ThirdPartyAdd2
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // ThirdPartyZIP2
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // ThirdPartyAdd3
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // ThirdPartyZIP3
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // ISSMALLFlow
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // VouchType
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // VouchTypeName
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // Flag1
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // FARMINGTYPE
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // IsLowRisk
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // Purpose
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // Attribute01
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // Attribute02
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // Attribute03
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // Attribute04
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // Attribute05
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // Attribute06
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // Attribute07
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // Attribute08
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // Attribute09
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // BusinessSource
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // BusinessSourceName
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // OtherCondition
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // Remark
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // GuarantyFlag
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // LNGOTimes
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // GOLNTimes
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // DRTimes
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // OperateUserID
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // OperateOrgID
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // OperateOrgName
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // OperateUserName
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // OperateUserID1
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88), // OperateUserName1
            cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89), // InputUserID
            cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90), // InputUserName
            cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91), // InputOrgID
            cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92), // InputOrgName
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // InputDate
            cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94), // UpdateDate
            cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95), // PigeonholeDate
            cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96), // TempSaveFlag
            cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97) // PhaseOpinion
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LoanBusiness entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setSeqNo(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setApplyType(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLineNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSerialNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setRelativeSerialNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setCustomerID(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCustomerName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setOccurDate(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setBusinessType(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setOccurType(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCreditAggreement(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setContractFlag(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setThirdParty3(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setCooperatetEntName(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDESCRIBE1(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setOperationMode(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setBusinessCurrency(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setBusinessSum(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setTermMonth(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setTermDay(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setRateMode(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBaseRateType(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setBaseRate(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setRateFloatType(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setRateFloat(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setBusinessRate(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setAdjustRateType(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDESIGNATEDATE(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setCYCLEMONTHS(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setMAINREPAYMENTMETHOD(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setREPAYMENTMETHOD(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setPayCyc(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setGainCyc(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setGainAmount(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setHoldCorpus(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setAMORTIZETERM(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setGRACEPERIODDATE(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setPayAccountName(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setPayAccountNo(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setDefaultPayAcctNoType(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setIncomeOrgID(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setIncomeOrgName(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setPaymentMode(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setHouseNum(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setCurrentHouseCount(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setMfeeSum(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setPutOutType(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setThirdParty1(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setThirdPartyID1(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setThirdParty2(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setConstructionArea(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setThirdPartyID2(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setThirdPartyAdd1(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setThirdPartyZIP1(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setThirdPartyAdd2(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setThirdPartyZIP2(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setThirdPartyAdd3(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setThirdPartyZIP3(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setISSMALLFlow(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setVouchType(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setVouchTypeName(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setFlag1(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setFARMINGTYPE(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setIsLowRisk(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setPurpose(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setAttribute01(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setAttribute02(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setAttribute03(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setAttribute04(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setAttribute05(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setAttribute06(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setAttribute07(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setAttribute08(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setAttribute09(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setBusinessSource(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setBusinessSourceName(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setOtherCondition(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setRemark(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setGuarantyFlag(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setLNGOTimes(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setGOLNTimes(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setDRTimes(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setOperateUserID(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setOperateOrgID(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setOperateOrgName(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setOperateUserName(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setOperateUserID1(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setOperateUserName1(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
        entity.setInputUserID(cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89));
        entity.setInputUserName(cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90));
        entity.setInputOrgID(cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91));
        entity.setInputOrgName(cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92));
        entity.setInputDate(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setUpdateDate(cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94));
        entity.setPigeonholeDate(cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95));
        entity.setTempSaveFlag(cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96));
        entity.setPhaseOpinion(cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(LoanBusiness entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(LoanBusiness entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}

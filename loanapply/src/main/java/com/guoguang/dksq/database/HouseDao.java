package com.guoguang.dksq.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table HOUSE.
*/
public class HouseDao extends AbstractDao<House, Long> {

    public static final String TABLENAME = "HOUSE";

    /**
     * Properties of entity House.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property SeqNo = new Property(1, String.class, "SeqNo", false, "SEQ_NO");
        public final static Property GuarantyID = new Property(2, String.class, "GuarantyID", false, "GUARANTY_ID");
        public final static Property ConfirmNum = new Property(3, String.class, "ConfirmNum", false, "CONFIRM_NUM");
        public final static Property Rukuname1 = new Property(4, String.class, "rukuname1", false, "RUKUNAME1");
        public final static Property Rukucode1 = new Property(5, String.class, "rukucode1", false, "RUKUCODE1");
        public final static Property Rukuname2 = new Property(6, String.class, "rukuname2", false, "RUKUNAME2");
        public final static Property Rukucode2 = new Property(7, String.class, "rukucode2", false, "RUKUCODE2");
        public final static Property Rukuname3 = new Property(8, String.class, "rukuname3", false, "RUKUNAME3");
        public final static Property Rukucode3 = new Property(9, String.class, "rukucode3", false, "RUKUCODE3");
        public final static Property GuarantyType = new Property(10, String.class, "GuarantyType", false, "GUARANTY_TYPE");
        public final static Property CertType = new Property(11, String.class, "CertType", false, "CERT_TYPE");
        public final static Property CertID = new Property(12, String.class, "CertID", false, "CERT_ID");
        public final static Property OwnerID = new Property(13, String.class, "OwnerID", false, "OWNER_ID");
        public final static Property OwnerName = new Property(14, String.class, "OwnerName", false, "OWNER_NAME");
        public final static Property LoanCardNo = new Property(15, String.class, "LoanCardNo", false, "LOAN_CARD_NO");
        public final static Property OwnerType = new Property(16, String.class, "OwnerType", false, "OWNER_TYPE");
        public final static Property Togetheronwer = new Property(17, String.class, "Togetheronwer", false, "TOGETHERONWER");
        public final static Property GuarantyRightID = new Property(18, String.class, "GuarantyRightID", false, "GUARANTY_RIGHT_ID");
        public final static Property GuarantyTerm = new Property(19, String.class, "GuarantyTerm", false, "GUARANTY_TERM");
        public final static Property GuarantySubType = new Property(20, String.class, "GuarantySubType", false, "GUARANTY_SUB_TYPE");
        public final static Property HourseFormat = new Property(21, String.class, "HourseFormat", false, "HOURSE_FORMAT");
        public final static Property HouseName = new Property(22, String.class, "HouseName", false, "HOUSE_NAME");
        public final static Property Developer = new Property(23, String.class, "Developer", false, "DEVELOPER");
        public final static Property DeveloperVouch = new Property(24, String.class, "DeveloperVouch", false, "DEVELOPER_VOUCH");
        public final static Property BuildingName = new Property(25, String.class, "BuildingName", false, "BUILDING_NAME");
        public final static Property FloorNum = new Property(26, String.class, "FloorNum", false, "FLOOR_NUM");
        public final static Property GuarantyLocation = new Property(27, String.class, "GuarantyLocation", false, "GUARANTY_LOCATION");
        public final static Property GuarantyArea = new Property(28, String.class, "GuarantyArea", false, "GUARANTY_AREA");
        public final static Property UnitPrice = new Property(29, String.class, "UnitPrice", false, "UNIT_PRICE");
        public final static Property GuarantyAmount = new Property(30, String.class, "GuarantyAmount", false, "GUARANTY_AMOUNT");
        public final static Property BuyMoney = new Property(31, String.class, "BuyMoney", false, "BUY_MONEY");
        public final static Property MustPayMoney = new Property(32, String.class, "MustPayMoney", false, "MUST_PAY_MONEY");
        public final static Property AlreadPayMoney = new Property(33, String.class, "AlreadPayMoney", false, "ALREAD_PAY_MONEY");
        public final static Property FirstPaySource = new Property(34, String.class, "FirstPaySource", false, "FIRST_PAY_SOURCE");
        public final static Property BuildingFinishDate = new Property(35, String.class, "BuildingFinishDate", false, "BUILDING_FINISH_DATE");
        public final static Property FitmentState = new Property(36, String.class, "FitmentState", false, "FITMENT_STATE");
        public final static Property UseNature = new Property(37, String.class, "UseNature", false, "USE_NATURE");
        public final static Property GuarantyDescribe3 = new Property(38, String.class, "GuarantyDescribe3", false, "GUARANTY_DESCRIBE3");
        public final static Property ThirdParty1 = new Property(39, String.class, "ThirdParty1", false, "THIRD_PARTY1");
        public final static Property Frequency = new Property(40, String.class, "Frequency", false, "FREQUENCY");
        public final static Property GuarantyDescript = new Property(41, String.class, "GuarantyDescript", false, "GUARANTY_DESCRIPT");
        public final static Property EvalMethod = new Property(42, String.class, "EvalMethod", false, "EVAL_METHOD");
        public final static Property EvalOrgName = new Property(43, String.class, "EvalOrgName", false, "EVAL_ORG_NAME");
        public final static Property EvalOrgID = new Property(44, String.class, "EvalOrgID", false, "EVAL_ORG_ID");
        public final static Property EvalDate = new Property(45, String.class, "EvalDate", false, "EVAL_DATE");
        public final static Property EvalCurrency = new Property(46, String.class, "EvalCurrency", false, "EVAL_CURRENCY");
        public final static Property EvalNetValue = new Property(47, String.class, "EvalNetValue", false, "EVAL_NET_VALUE");
        public final static Property EvalNetValue2 = new Property(48, String.class, "EvalNetValue2", false, "EVAL_NET_VALUE2");
        public final static Property GuarantyCurrency = new Property(49, String.class, "GuarantyCurrency", false, "GUARANTY_CURRENCY");
        public final static Property ConfirmValue = new Property(50, String.class, "ConfirmValue", false, "CONFIRM_VALUE");
        public final static Property EvalSignValue = new Property(51, String.class, "EvalSignValue", false, "EVAL_SIGN_VALUE");
        public final static Property ConfirmSignValue = new Property(52, String.class, "ConfirmSignValue", false, "CONFIRM_SIGN_VALUE");
        public final static Property BusSignVale = new Property(53, String.class, "BusSignVale", false, "BUS_SIGN_VALE");
        public final static Property BusTotalVale = new Property(54, String.class, "BusTotalVale", false, "BUS_TOTAL_VALE");
        public final static Property OtherGuarantyRight = new Property(55, String.class, "OtherGuarantyRight", false, "OTHER_GUARANTY_RIGHT");
        public final static Property OldOwner = new Property(56, String.class, "OldOwner", false, "OLD_OWNER");
        public final static Property BusBuyContractNo = new Property(57, String.class, "BusBuyContractNo", false, "BUS_BUY_CONTRACT_NO");
        public final static Property Remark = new Property(58, String.class, "Remark", false, "REMARK");
        public final static Property InputUserID = new Property(59, String.class, "InputUserID", false, "INPUT_USER_ID");
        public final static Property InputOrgID = new Property(60, String.class, "InputOrgID", false, "INPUT_ORG_ID");
        public final static Property InputDate = new Property(61, String.class, "InputDate", false, "INPUT_DATE");
        public final static Property UpdateDate = new Property(62, String.class, "UpdateDate", false, "UPDATE_DATE");
        public final static Property GuarantyAreaName = new Property(63, String.class, "GuarantyAreaName", false, "GUARANTY_AREA_NAME");
    };


    public HouseDao(DaoConfig config) {
        super(config);
    }
    
    public HouseDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'HOUSE' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'SEQ_NO' TEXT," + // 1: SeqNo
                "'GUARANTY_ID' TEXT," + // 2: GuarantyID
                "'CONFIRM_NUM' TEXT," + // 3: ConfirmNum
                "'RUKUNAME1' TEXT," + // 4: rukuname1
                "'RUKUCODE1' TEXT," + // 5: rukucode1
                "'RUKUNAME2' TEXT," + // 6: rukuname2
                "'RUKUCODE2' TEXT," + // 7: rukucode2
                "'RUKUNAME3' TEXT," + // 8: rukuname3
                "'RUKUCODE3' TEXT," + // 9: rukucode3
                "'GUARANTY_TYPE' TEXT," + // 10: GuarantyType
                "'CERT_TYPE' TEXT," + // 11: CertType
                "'CERT_ID' TEXT," + // 12: CertID
                "'OWNER_ID' TEXT," + // 13: OwnerID
                "'OWNER_NAME' TEXT," + // 14: OwnerName
                "'LOAN_CARD_NO' TEXT," + // 15: LoanCardNo
                "'OWNER_TYPE' TEXT," + // 16: OwnerType
                "'TOGETHERONWER' TEXT," + // 17: Togetheronwer
                "'GUARANTY_RIGHT_ID' TEXT," + // 18: GuarantyRightID
                "'GUARANTY_TERM' TEXT," + // 19: GuarantyTerm
                "'GUARANTY_SUB_TYPE' TEXT," + // 20: GuarantySubType
                "'HOURSE_FORMAT' TEXT," + // 21: HourseFormat
                "'HOUSE_NAME' TEXT," + // 22: HouseName
                "'DEVELOPER' TEXT," + // 23: Developer
                "'DEVELOPER_VOUCH' TEXT," + // 24: DeveloperVouch
                "'BUILDING_NAME' TEXT," + // 25: BuildingName
                "'FLOOR_NUM' TEXT," + // 26: FloorNum
                "'GUARANTY_LOCATION' TEXT," + // 27: GuarantyLocation
                "'GUARANTY_AREA' TEXT," + // 28: GuarantyArea
                "'UNIT_PRICE' TEXT," + // 29: UnitPrice
                "'GUARANTY_AMOUNT' TEXT," + // 30: GuarantyAmount
                "'BUY_MONEY' TEXT," + // 31: BuyMoney
                "'MUST_PAY_MONEY' TEXT," + // 32: MustPayMoney
                "'ALREAD_PAY_MONEY' TEXT," + // 33: AlreadPayMoney
                "'FIRST_PAY_SOURCE' TEXT," + // 34: FirstPaySource
                "'BUILDING_FINISH_DATE' TEXT," + // 35: BuildingFinishDate
                "'FITMENT_STATE' TEXT," + // 36: FitmentState
                "'USE_NATURE' TEXT," + // 37: UseNature
                "'GUARANTY_DESCRIBE3' TEXT," + // 38: GuarantyDescribe3
                "'THIRD_PARTY1' TEXT," + // 39: ThirdParty1
                "'FREQUENCY' TEXT," + // 40: Frequency
                "'GUARANTY_DESCRIPT' TEXT," + // 41: GuarantyDescript
                "'EVAL_METHOD' TEXT," + // 42: EvalMethod
                "'EVAL_ORG_NAME' TEXT," + // 43: EvalOrgName
                "'EVAL_ORG_ID' TEXT," + // 44: EvalOrgID
                "'EVAL_DATE' TEXT," + // 45: EvalDate
                "'EVAL_CURRENCY' TEXT," + // 46: EvalCurrency
                "'EVAL_NET_VALUE' TEXT," + // 47: EvalNetValue
                "'EVAL_NET_VALUE2' TEXT," + // 48: EvalNetValue2
                "'GUARANTY_CURRENCY' TEXT," + // 49: GuarantyCurrency
                "'CONFIRM_VALUE' TEXT," + // 50: ConfirmValue
                "'EVAL_SIGN_VALUE' TEXT," + // 51: EvalSignValue
                "'CONFIRM_SIGN_VALUE' TEXT," + // 52: ConfirmSignValue
                "'BUS_SIGN_VALE' TEXT," + // 53: BusSignVale
                "'BUS_TOTAL_VALE' TEXT," + // 54: BusTotalVale
                "'OTHER_GUARANTY_RIGHT' TEXT," + // 55: OtherGuarantyRight
                "'OLD_OWNER' TEXT," + // 56: OldOwner
                "'BUS_BUY_CONTRACT_NO' TEXT," + // 57: BusBuyContractNo
                "'REMARK' TEXT," + // 58: Remark
                "'INPUT_USER_ID' TEXT," + // 59: InputUserID
                "'INPUT_ORG_ID' TEXT," + // 60: InputOrgID
                "'INPUT_DATE' TEXT," + // 61: InputDate
                "'UPDATE_DATE' TEXT,"+// 62: UpdateDate
                "'GUARANTY_AREA_NAME' TEXT);"); //63:GurarantyAreaName
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'HOUSE'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, House entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String SeqNo = entity.getSeqNo();
        if (SeqNo != null) {
            stmt.bindString(2, SeqNo);
        }
 
        String GuarantyID = entity.getGuarantyID();
        if (GuarantyID != null) {
            stmt.bindString(3, GuarantyID);
        }
 
        String ConfirmNum = entity.getConfirmNum();
        if (ConfirmNum != null) {
            stmt.bindString(4, ConfirmNum);
        }
 
        String rukuname1 = entity.getRukuname1();
        if (rukuname1 != null) {
            stmt.bindString(5, rukuname1);
        }
 
        String rukucode1 = entity.getRukucode1();
        if (rukucode1 != null) {
            stmt.bindString(6, rukucode1);
        }
 
        String rukuname2 = entity.getRukuname2();
        if (rukuname2 != null) {
            stmt.bindString(7, rukuname2);
        }
 
        String rukucode2 = entity.getRukucode2();
        if (rukucode2 != null) {
            stmt.bindString(8, rukucode2);
        }
 
        String rukuname3 = entity.getRukuname3();
        if (rukuname3 != null) {
            stmt.bindString(9, rukuname3);
        }
 
        String rukucode3 = entity.getRukucode3();
        if (rukucode3 != null) {
            stmt.bindString(10, rukucode3);
        }
 
        String GuarantyType = entity.getGuarantyType();
        if (GuarantyType != null) {
            stmt.bindString(11, GuarantyType);
        }
 
        String CertType = entity.getCertType();
        if (CertType != null) {
            stmt.bindString(12, CertType);
        }
 
        String CertID = entity.getCertID();
        if (CertID != null) {
            stmt.bindString(13, CertID);
        }
 
        String OwnerID = entity.getOwnerID();
        if (OwnerID != null) {
            stmt.bindString(14, OwnerID);
        }
 
        String OwnerName = entity.getOwnerName();
        if (OwnerName != null) {
            stmt.bindString(15, OwnerName);
        }
 
        String LoanCardNo = entity.getLoanCardNo();
        if (LoanCardNo != null) {
            stmt.bindString(16, LoanCardNo);
        }
 
        String OwnerType = entity.getOwnerType();
        if (OwnerType != null) {
            stmt.bindString(17, OwnerType);
        }
 
        String Togetheronwer = entity.getTogetheronwer();
        if (Togetheronwer != null) {
            stmt.bindString(18, Togetheronwer);
        }
 
        String GuarantyRightID = entity.getGuarantyRightID();
        if (GuarantyRightID != null) {
            stmt.bindString(19, GuarantyRightID);
        }
 
        String GuarantyTerm = entity.getGuarantyTerm();
        if (GuarantyTerm != null) {
            stmt.bindString(20, GuarantyTerm);
        }
 
        String GuarantySubType = entity.getGuarantySubType();
        if (GuarantySubType != null) {
            stmt.bindString(21, GuarantySubType);
        }
 
        String HourseFormat = entity.getHourseFormat();
        if (HourseFormat != null) {
            stmt.bindString(22, HourseFormat);
        }
 
        String HouseName = entity.getHouseName();
        if (HouseName != null) {
            stmt.bindString(23, HouseName);
        }
 
        String Developer = entity.getDeveloper();
        if (Developer != null) {
            stmt.bindString(24, Developer);
        }
 
        String DeveloperVouch = entity.getDeveloperVouch();
        if (DeveloperVouch != null) {
            stmt.bindString(25, DeveloperVouch);
        }
 
        String BuildingName = entity.getBuildingName();
        if (BuildingName != null) {
            stmt.bindString(26, BuildingName);
        }
 
        String FloorNum = entity.getFloorNum();
        if (FloorNum != null) {
            stmt.bindString(27, FloorNum);
        }
 
        String GuarantyLocation = entity.getGuarantyLocation();
        if (GuarantyLocation != null) {
            stmt.bindString(28, GuarantyLocation);
        }
 
        String GuarantyArea = entity.getGuarantyArea();
        if (GuarantyArea != null) {
            stmt.bindString(29, GuarantyArea);
        }
 
        String UnitPrice = entity.getUnitPrice();
        if (UnitPrice != null) {
            stmt.bindString(30, UnitPrice);
        }
 
        String GuarantyAmount = entity.getGuarantyAmount();
        if (GuarantyAmount != null) {
            stmt.bindString(31, GuarantyAmount);
        }
 
        String BuyMoney = entity.getBuyMoney();
        if (BuyMoney != null) {
            stmt.bindString(32, BuyMoney);
        }
 
        String MustPayMoney = entity.getMustPayMoney();
        if (MustPayMoney != null) {
            stmt.bindString(33, MustPayMoney);
        }
 
        String AlreadPayMoney = entity.getAlreadPayMoney();
        if (AlreadPayMoney != null) {
            stmt.bindString(34, AlreadPayMoney);
        }
 
        String FirstPaySource = entity.getFirstPaySource();
        if (FirstPaySource != null) {
            stmt.bindString(35, FirstPaySource);
        }
 
        String BuildingFinishDate = entity.getBuildingFinishDate();
        if (BuildingFinishDate != null) {
            stmt.bindString(36, BuildingFinishDate);
        }
 
        String FitmentState = entity.getFitmentState();
        if (FitmentState != null) {
            stmt.bindString(37, FitmentState);
        }
 
        String UseNature = entity.getUseNature();
        if (UseNature != null) {
            stmt.bindString(38, UseNature);
        }
 
        String GuarantyDescribe3 = entity.getGuarantyDescribe3();
        if (GuarantyDescribe3 != null) {
            stmt.bindString(39, GuarantyDescribe3);
        }
 
        String ThirdParty1 = entity.getThirdParty1();
        if (ThirdParty1 != null) {
            stmt.bindString(40, ThirdParty1);
        }
 
        String Frequency = entity.getFrequency();
        if (Frequency != null) {
            stmt.bindString(41, Frequency);
        }
 
        String GuarantyDescript = entity.getGuarantyDescript();
        if (GuarantyDescript != null) {
            stmt.bindString(42, GuarantyDescript);
        }
 
        String EvalMethod = entity.getEvalMethod();
        if (EvalMethod != null) {
            stmt.bindString(43, EvalMethod);
        }
 
        String EvalOrgName = entity.getEvalOrgName();
        if (EvalOrgName != null) {
            stmt.bindString(44, EvalOrgName);
        }
 
        String EvalOrgID = entity.getEvalOrgID();
        if (EvalOrgID != null) {
            stmt.bindString(45, EvalOrgID);
        }
 
        String EvalDate = entity.getEvalDate();
        if (EvalDate != null) {
            stmt.bindString(46, EvalDate);
        }
 
        String EvalCurrency = entity.getEvalCurrency();
        if (EvalCurrency != null) {
            stmt.bindString(47, EvalCurrency);
        }
 
        String EvalNetValue = entity.getEvalNetValue();
        if (EvalNetValue != null) {
            stmt.bindString(48, EvalNetValue);
        }
 
        String EvalNetValue2 = entity.getEvalNetValue2();
        if (EvalNetValue2 != null) {
            stmt.bindString(49, EvalNetValue2);
        }
 
        String GuarantyCurrency = entity.getGuarantyCurrency();
        if (GuarantyCurrency != null) {
            stmt.bindString(50, GuarantyCurrency);
        }
 
        String ConfirmValue = entity.getConfirmValue();
        if (ConfirmValue != null) {
            stmt.bindString(51, ConfirmValue);
        }
 
        String EvalSignValue = entity.getEvalSignValue();
        if (EvalSignValue != null) {
            stmt.bindString(52, EvalSignValue);
        }
 
        String ConfirmSignValue = entity.getConfirmSignValue();
        if (ConfirmSignValue != null) {
            stmt.bindString(53, ConfirmSignValue);
        }
 
        String BusSignVale = entity.getBusSignVale();
        if (BusSignVale != null) {
            stmt.bindString(54, BusSignVale);
        }
 
        String BusTotalVale = entity.getBusTotalVale();
        if (BusTotalVale != null) {
            stmt.bindString(55, BusTotalVale);
        }
 
        String OtherGuarantyRight = entity.getOtherGuarantyRight();
        if (OtherGuarantyRight != null) {
            stmt.bindString(56, OtherGuarantyRight);
        }
 
        String OldOwner = entity.getOldOwner();
        if (OldOwner != null) {
            stmt.bindString(57, OldOwner);
        }
 
        String BusBuyContractNo = entity.getBusBuyContractNo();
        if (BusBuyContractNo != null) {
            stmt.bindString(58, BusBuyContractNo);
        }
 
        String Remark = entity.getRemark();
        if (Remark != null) {
            stmt.bindString(59, Remark);
        }
 
        String InputUserID = entity.getInputUserID();
        if (InputUserID != null) {
            stmt.bindString(60, InputUserID);
        }
 
        String InputOrgID = entity.getInputOrgID();
        if (InputOrgID != null) {
            stmt.bindString(61, InputOrgID);
        }
 
        String InputDate = entity.getInputDate();
        if (InputDate != null) {
            stmt.bindString(62, InputDate);
        }
 
        String UpdateDate = entity.getUpdateDate();
        if (UpdateDate != null) {
            stmt.bindString(63, UpdateDate);
        }

        String GuarantyAreaName = entity.getGuarantyAreaName();
        if(GuarantyAreaName !=null){
            stmt.bindString(64, GuarantyAreaName);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public House readEntity(Cursor cursor, int offset) {
        House entity = new House( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // SeqNo
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // GuarantyID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // ConfirmNum
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // rukuname1
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // rukucode1
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // rukuname2
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // rukucode2
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // rukuname3
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // rukucode3
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // GuarantyType
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // CertType
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // CertID
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // OwnerID
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // OwnerName
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // LoanCardNo
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // OwnerType
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // Togetheronwer
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // GuarantyRightID
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // GuarantyTerm
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // GuarantySubType
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // HourseFormat
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // HouseName
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // Developer
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // DeveloperVouch
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // BuildingName
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // FloorNum
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // GuarantyLocation
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // GuarantyArea
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // UnitPrice
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // GuarantyAmount
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // BuyMoney
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // MustPayMoney
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // AlreadPayMoney
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // FirstPaySource
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // BuildingFinishDate
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // FitmentState
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // UseNature
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // GuarantyDescribe3
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // ThirdParty1
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // Frequency
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // GuarantyDescript
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // EvalMethod
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // EvalOrgName
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // EvalOrgID
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // EvalDate
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // EvalCurrency
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // EvalNetValue
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // EvalNetValue2
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // GuarantyCurrency
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // ConfirmValue
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // EvalSignValue
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // ConfirmSignValue
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // BusSignVale
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // BusTotalVale
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // OtherGuarantyRight
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // OldOwner
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // BusBuyContractNo
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // Remark
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // InputUserID
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // InputOrgID
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // InputDate
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // UpdateDate
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63)
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, House entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setSeqNo(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setGuarantyID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setConfirmNum(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setRukuname1(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setRukucode1(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setRukuname2(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setRukucode2(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setRukuname3(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setRukucode3(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setGuarantyType(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCertType(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCertID(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setOwnerID(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setOwnerName(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setLoanCardNo(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setOwnerType(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setTogetheronwer(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setGuarantyRightID(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setGuarantyTerm(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setGuarantySubType(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setHourseFormat(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setHouseName(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setDeveloper(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setDeveloperVouch(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setBuildingName(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFloorNum(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setGuarantyLocation(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setGuarantyArea(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setUnitPrice(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setGuarantyAmount(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setBuyMoney(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setMustPayMoney(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setAlreadPayMoney(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setFirstPaySource(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setBuildingFinishDate(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFitmentState(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setUseNature(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setGuarantyDescribe3(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setThirdParty1(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setFrequency(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setGuarantyDescript(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setEvalMethod(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setEvalOrgName(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setEvalOrgID(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setEvalDate(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setEvalCurrency(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setEvalNetValue(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setEvalNetValue2(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setGuarantyCurrency(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setConfirmValue(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setEvalSignValue(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setConfirmSignValue(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setBusSignVale(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setBusTotalVale(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setOtherGuarantyRight(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setOldOwner(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setBusBuyContractNo(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setRemark(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setInputUserID(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setInputOrgID(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setInputDate(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setUpdateDate(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setGuarantyAreaName(cursor.isNull(offset + 63)? null : cursor.getString(offset + 63));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(House entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(House entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
